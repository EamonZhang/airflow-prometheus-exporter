image: golang:1-buster

stages:
  - validate
  - build
  - image

variables:
  DOCKER_DRIVER: overlay2

fmt:
  stage: validate
  before_script:
    - go version
  script:
    - apk add --no-cache git
    - go get || true
    - gofmt -l -s -e .
    - exit $(gofmt -l -s -e . | wc -l)

lint:
  stage: validate
  before_script:
    - go version
  script:
    - apk add --no-cache git
    - go get -u golang.org/x/lint/golint
    - golint -set_exit_status

test:
  stage: validate
  before_script:
    - go version
  script:
    - apk add --no-cache git
    - go get || true
    - go test -cover
  coverage: '/^coverage:\s(\d+(?:\.\d+)?%)/'

vet:
  stage: validate
  before_script:
    - go version
  script:
    - apk add --no-cache git
    - go get || true
    - go vet

compile:
  stage: build
  before_script:
    - go version
  script:
    - apk add --no-cache git
    - go get || true
    - CGO_ENABLED=0 go build -o airflow-prometheus-exporter .
  artifacts:
    name: "artifact_{$CI_COMMIT_SHA}"
    expire_in: 30 min
    paths:
      - airflow-prometheus-exporter
      - Dockerfile

build-docker:
  stage: image
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - mkdir -p $HOME/.docker
    - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - if [ "${CI_COMMIT_REF_SLUG}" == "master" ]; then IMAGE_TAG="latest"; else IMAGE_TAG="${CI_COMMIT_REF_SLUG}"; fi
    - docker build --pull -t $CI_REGISTRY_IMAGE:$IMAGE_TAG .
    - docker push $CI_REGISTRY_IMAGE:$IMAGE_TAG
  dependencies:
    - compile
  variables:
    GIT_STRATEGY: none
  tags:
    - docker-images

